// Max width of wrapper
$wrapper-max-width: 1000px;

// Min width of wrapper
$wrapper-min-width: 320px;

// Number of columns
$cols: 12;

// Gutter width
$gutter-width: 20px;

// Total width of content
$container-width: 100%;

// Each side margin of a column
$col-gutter-width: percentage( ($gutter-width/2) / $wrapper-max-width);

// Column width
$col-width: ($container-width - ( ($cols - 1) * ( $col-gutter-width * 2 ) ) ) / $cols;

// External width of a column, counting each side of the gutter
$col-outer-width: $col-width + $col-gutter-width * 2;

// Mixin
@mixin col($cols) {
	width: $cols * $col-width + ($col-gutter-width * 2) * ($cols - 1);
}

@mixin offset-col($cols) {
	margin-left: $cols * $col-width + ($col-gutter-width * 3) * $cols;
}

@mixin offset-col-first-child($cols) {
	margin-left: $cols * $col-width + ($col-gutter-width * 2) * $cols;
}

/* Grid
   ----------------------- */

.wrapper {
	max-width: $wrapper-max-width;
	min-width: $wrapper-min-width;
	margin-left: auto;
	margin-right: auto;
}

.row {
	@extend .clearfix;
}

[class*=col-] {
	float: left;
	margin: {
		left: $col-gutter-width;
		right: $col-gutter-width;
	}
	@include box-sizing(border-box);
}

.row > [class*="col-"]:first-child {
	margin-left: 0;
}

.row > [class*="col-"]:last-child {
	margin-right: 0;
}

/* Column */

@for $i from 1 through ($cols) {
	.col-#{$i} {
		@include col($i);
	}
}

/* Push left column */

@for $i from 1 through ($cols - 2) {
	.offset-col-#{$i} {
		@include offset-col($i);
	}
	.row >.offset-col-#{$i}:first-child {
		@include offset-col-first-child($i);
	}
}