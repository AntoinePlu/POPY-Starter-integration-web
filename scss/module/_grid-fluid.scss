// Total width of content
$container-width: 100%;

// Each side margin of a column
$col-gutter-width: percentage( ($gutter-width) / $wrapper-max-width);

// Column width
$col-width: ($container-width - ( ($cols ) * ( $col-gutter-width) ) ) / $cols;

// External width of a column, counting each side of the gutter
$col-outer-width: $col-width + $col-gutter-width * 2;

.test  {
	width: $col-width;
}

// Mixin
@mixin col($cols) {
	width: ($cols * $col-width) + (($cols - 1) * ($col-gutter-width)) ;
}

@mixin offset-col($cols) {
	margin-left: ($cols * $col-width) + (($cols + 1) * $col-gutter-width);
}

/* Grid
   ----------------------- */

.wrapper {
	max-width: $wrapper-max-width;
	min-width: $wrapper-min-width;
	margin-left: auto;
	margin-right: auto;
}

.row {
	@extend .clearfix;
	margin-left: -$col-gutter-width;
}

[class*=col-] {
	float: left;
	margin: {
		left: $col-gutter-width ;
	}
}

/* Column */

@for $i from 1 through ($cols) {
	.col-#{$i} {
		@include col($i);
	}
}

/* Push left column */

@for $i from 1 through ($cols - 2) {
	.offset-col-#{$i} {
		@include offset-col($i);
	}
}